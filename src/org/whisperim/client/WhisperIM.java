/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WhisperIM.java
 *
 * Created on Dec 5, 2008, 4:42:26 PM
 */

package org.whisperim.client;
import javax.swing.*;

import org.whisperim.security.Encryptor;

import java.security.PrivateKey;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

/**
 *
 * @author Kirk Banks, Chris Thompson
 */
public class WhisperIM extends javax.swing.JFrame{
    //Encryptor for the chat session
    private Encryptor encrypt;
    private boolean doEncryption = false;
    private String theirHandle_;
    private String myHandle_;
    private WhisperClient myParent_;
  
    
    /** Creates new form WhisperIM */
    public WhisperIM(String theirHandle, String myHandle, WhisperClient myParent, PrivateKey myKey) {
    	super("Whisper IM Conversation with " + theirHandle);
    	initComponents();
        buddyName.setText(theirHandle);
        encrypt = new Encryptor(Encryptor.getPublicKeyForBuddy(theirHandle), myKey);
        toggleEncryption.setSelected(doEncryption);
        toggleEncryption.setText("Encryption: Off");
        talkArea.requestFocus();
        theirHandle_ = theirHandle;
        myHandle_ = myHandle;
        myParent_ = myParent;
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        messageArea = new java.awt.TextArea();
        sendBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        talkArea = new javax.swing.JTextArea();
        buddyName = new javax.swing.JLabel();
        toggleEncryption = new javax.swing.JToggleButton();

        org.jdesktop.layout.GroupLayout jDialog1Layout = new org.jdesktop.layout.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jDialog2Layout = new org.jdesktop.layout.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(470, 315));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        sendBtn.setText("Send");
        sendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendBtnActionPerformed(evt);
            }
        });

        talkArea.setColumns(20);
        talkArea.setRows(5);
        jScrollPane1.setViewportView(talkArea);

        buddyName.setText("jLabel1");

        toggleEncryption.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleEncryptionActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(buddyName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 73, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 200, Short.MAX_VALUE)
                        .add(toggleEncryption))
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .add(messageArea, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                    .add(sendBtn))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(buddyName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(toggleEncryption))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 153, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 20, Short.MAX_VALUE)
                .add(messageArea, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(sendBtn)
                .add(42, 42, 42))
        );

        buddyName.getAccessibleContext().setAccessibleName("Buddy");
    }// </editor-fold>//GEN-END:initComponents

    private void toggleEncryptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleEncryptionActionPerformed
        if (doEncryption){
            doEncryption = false;
            toggleEncryption.setText("Encryption: Off");
        }else{
            doEncryption = true;
            toggleEncryption.setText("Encryption: On");
        }
}//GEN-LAST:event_toggleEncryptionActionPerformed

    private void sendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendBtnActionPerformed
        sendMsg();
}//GEN-LAST:event_sendBtnActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    	System.out.println("Window closing");
    	myParent_.onWindowClose(theirHandle_);
    }//GEN-LAST:event_formWindowClosing

    public void receiveMsg(Message message)
    {
    	
    	
    	DateFormat d = DateFormat.getTimeInstance(DateFormat.MEDIUM);
    	talkArea.append("(" + d.format(message.getTimeSent()) + ") ");
    	talkArea.append(message.getFrom() + ": ");
        
    	if (!doEncryption || !message.getMessage().contains("<key>")){
    		talkArea.append(message.getMessage());
    	}else{
    		
    		talkArea.append("(Encrypted Message) " + encrypt.decryptMessage(message.getMessage()));
    	}
        
        talkArea.append("\n");
    }

    public void sendMsg()
    {
        //Code needed for sending
        String messageText;
        Calendar now = Calendar.getInstance();
        Date d = now.getTime();
        DateFormat df1 = DateFormat.getTimeInstance(DateFormat.MEDIUM);
        if (doEncryption){
            //Message will be encrypted
        	talkArea.append("(" + df1.format(d) + ") " + myHandle_ + ":  (Ecrypted Message) " + messageArea.getText() + "\n");
            messageText = encrypt.generateCipherText(messageArea.getText());
        }else{
        	talkArea.append("(" + df1.format(d) + ") " + myHandle_ + ": " + messageArea.getText() + "\n");
            messageText = messageArea.getText();
        }

        Message message = new Message(myHandle_, theirHandle_, messageText, Calendar.getInstance().getTime());
        
        myParent_.sendMessage(message);
        messageArea.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel buddyName;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.TextArea messageArea;
    private javax.swing.JButton sendBtn;
    private javax.swing.JTextArea talkArea;
    private javax.swing.JToggleButton toggleEncryption;
    // End of variables declaration//GEN-END:variables

}
